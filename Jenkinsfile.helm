pipeline {
    agent any

    environment {
        DOCKER_IMAGE = 'ramirachdi/mon-app:latest'
        HELM_CHART_PATH = './mon-app'
    }

    stages {
        stage('Cloner le dÃ©pÃ´t') {
            steps {
                git branch: 'main', url: 'https://github.com/ramirachdi/tp-kubernetes-helm-jenkins.git'
            }
        }

        stage('Construire l\'image Docker') {
            steps {
                script {
                    echo "ðŸ”§ Construction de l'image Docker..."
                    sh "docker build -t $DOCKER_IMAGE ."
                }
            }
        }

        stage('Pousser l\'image Docker') {
            steps {
                script {
                    echo "ðŸ“¤ Pousser l'image Docker sur Docker Hub..."
                    withCredentials([usernamePassword(
                        credentialsId: 'dockerhub-creds',
                        usernameVariable: 'DOCKER_USERNAME',
                        passwordVariable: 'DOCKER_PASSWORD'
                    )]) {
                        sh 'echo $DOCKER_PASSWORD | docker login -u $DOCKER_USERNAME --password-stdin'
                        sh "docker push $DOCKER_IMAGE"
                        sh "docker logout"
                    }
                }
            }
        }

        stage('DÃ©ploiement avec Helm') {
            steps {
                script {
                    echo "ðŸš€ DÃ©ploiement avec Helm..."
                    sh """
                        helm upgrade --install mon-app $HELM_CHART_PATH \
                        --set image.repository=ramirachdi/mon-app \
                        --set image.tag=latest
                    """
                }
            }
        }
    }
}
